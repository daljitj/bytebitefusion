title <- sub("Title: ", "", title)
title <- sub("Recipe for ", "", title)
recipe_only <- sub(".*Ingredients:", "Ingredients: ", recipe)
description <- ask_chatgpt(paste0("Give a detailed and stylish description to go along with the recipe for ",title))
generate_post <- function(category,cuisine) {
print(cuisine)
print(category)
print("Writing Description and Recipe")
recipe <- ask_chatgpt(paste0("Give a recipe for ",category," in the style of ",cuisine))
title <- sub("\n.*", "", recipe)
title <- sub("Recipe: ", "", title)
title <- sub("Title: ", "", title)
title <- sub("Recipe for ", "", title)
recipe_only <- sub(".*Ingredients:", "Ingredients: ", recipe)
description <- ask_chatgpt(paste0("Give a detailed and stylish description to go along with the recipe for ",title))
print("Generating Image")
create_and_download_image(paste0("Create a ultra realistic photo of a plated ",title," in an appetizing style for a food blog, professional food photography, 15mm"),paste0("static/",gsub(" ", "_", tolower(title)),".png"))
print("Stitching Markdown File")
header <- paste0("+++ title: '",title,"'
author: 'Daljit Singh Johal'
date: ", Sys.Date(),"
output: html_document
+++")
md_file <- paste0("+++
showonlyimage = true
draft = false
image = '",gsub(" ", "_", tolower(title)),".png'
date = '", Sys.time(),"'
title = '",title, "'
weight = 0
+++
", description, "
![Image alt](/",gsub(" ", "_", tolower(title)),".png '300px')
", recipe_only)
cat(md_file, file = paste0("C:\\Users\\dalji\\OneDrive\\Documents\\R\\bytebitefusion\\content\\home\\",title,".md"))
cat(md_file, file = paste0("C:\\Users\\dalji\\OneDrive\\Documents\\R\\bytebitefusion\\content\\",category,"\\",title,".md"))
}
generate_post("pizza",sample(cuisines, size = 1))
library(httr)
library(stringr)
my_key = readLines("api_key.txt")
# api key
api_key <- my_key
library(httr)
library(stringr)
my_key = readLines("api_key.txt")
# api key
api_key <- my_key
create_and_download_image <- function(prompt,path) {
response <- POST(
url = "https://api.openai.com/v1/images/generations",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "dall-e-3",
prompt=prompt,
size="1024x768",
quality="standard",
n=1
)
)
download.file(content(response)$data[[1]]$url, destfile = path,mode = 'wb')
}
create_and_download_image("a multi limbed chef robot working on multiple dishes with the flags of many countries across its body","images/chef_robot.png")
create_and_download_image("a multi limbed chef robot working on multiple dishes with the flags of many countries across its body","static/chef_robot.png")
response <- POST(
url = "https://api.openai.com/v1/images/generations",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "dall-e-3",
prompt=prompt,
size="1024x768",
quality="standard",
n=1
)
)
response <- POST(
url = "https://api.openai.com/v1/images/generations",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "dall-e-3",
prompt="a multi limbed chef robot working on multiple dishes with the flags of many countries across its body",
size="1024x768",
quality="standard",
n=1
)
)
response$content
content(response)
create_and_download_image <- function(prompt,path) {
response <- POST(
url = "https://api.openai.com/v1/images/generations",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "dall-e-3",
prompt=prompt,
size="1024x1792",
quality="standard",
n=1
)
)
download.file(content(response)$data[[1]]$url, destfile = path,mode = 'wb')
}
create_and_download_image("a multi limbed chef robot working on multiple dishes with the flags of many countries across its body","static/chef_robot.png")
create_and_download_image <- function(prompt,path) {
response <- POST(
url = "https://api.openai.com/v1/images/generations",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "dall-e-3",
prompt=prompt,
size="1792x1024",
quality="standard",
n=2
)
)
download.file(content(response)$data[[1]]$url, destfile = path,mode = 'wb')
}
create_and_download_image("an international multi limbed chef robot working on multiple dishes with the flags of many countries across its body","static/chef_robot.png")
create_and_download_image <- function(prompt,path) {
response <- POST(
url = "https://api.openai.com/v1/images/generations",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "dall-e-3",
prompt=prompt,
size="1792x1024",
quality="standard",
n=1
)
)
download.file(content(response)$data[[1]]$url, destfile = path,mode = 'wb')
}
create_and_download_image("an international multi limbed chef robot working on multiple dishes with the flags of many countries across its body","static/chef_robot.png")
create_and_download_image <- function(prompt,path) {
response <- POST(
url = "https://api.openai.com/v1/images/generations",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "dall-e-3",
prompt=prompt,
size="1792x1024",
quality="standard",
n=1
)
)
download.file(content(response)$data[[1]]$url, destfile = path,mode = 'wb')
}
create_and_download_image("an international multi limbed chef robot working on multiple dishes with the flags of many countries across its body","static/chef_robot_v2.png")
create_and_download_image("an international multi limbed chef robot working on multiple dishes with the flags of many countries across its body","static/chef_robot_v3.png")
create_and_download_image <- function(prompt,path) {
response <- POST(
url = "https://api.openai.com/v1/images/generations",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "dall-e-3",
prompt=prompt,
size="1024x1792",
quality="standard",
n=1
)
)
download.file(content(response)$data[[1]]$url, destfile = path,mode = 'wb')
}
create_and_download_image("an international multi limbed chef robot working on multiple dishes with the flags of many countries across its body","static/chef_robot_v4.png")
create_and_download_image <- function(prompt,path) {
response <- POST(
url = "https://api.openai.com/v1/images/generations",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "dall-e-3",
prompt=prompt,
size="1024x1792",
quality="standard",
n=1
)
)
download.file(content(response)$data[[1]]$url, destfile = path,mode = 'wb')
}
create_and_download_image("an international multi limbed chef robot working on multiple dishes with the flags of many countries across its body","static/chef_robot_v5.png")
create_and_download_image("a cartoony international multi limbed chef robot working on multiple dishes with the flags of many countries across its body","static/chef_robot_v5.png")
create_and_download_image("a  cartoony international multi limbed chef robot working on multiple dishes with the flags of many countries across its body","static/chef_robot_v6.png")
create_and_download_image("a  cartoony international multi limbed chef robot working on multiple dishes with the flags of many countries across its body","static/chef_robot_v7.png")
generate_post <- function(category,cuisine) {
print(cuisine)
print(category)
print("Writing Description and Recipe")
recipe <- ask_chatgpt(paste0("Give a recipe for ",category," in the style of ",cuisine))
title <- sub("\n.*", "", recipe)
title <- sub("Recipe: ", "", title)
title <- sub("Title: ", "", title)
title <- sub("Recipe for ", "", title)
recipe_only <- sub(".*Ingredients:", "Ingredients: ", recipe)
description <- ask_chatgpt(paste0("Give a detailed and stylish description to go along with the recipe for ",title))
print("Generating Image")
create_and_download_image(paste0("Create a ultra realistic photo of a plated ",title," in an appetizing style for a food blog, professional food photography, 15mm"),paste0("static/",gsub(" ", "_", tolower(title)),".png"))
print("Stitching Markdown File")
header <- paste0("+++ title: '",title,"'
author: 'Daljit Singh Johal'
date: ", Sys.Date(),"
output: html_document
+++")
md_file <- paste0("+++
showonlyimage = true
draft = false
image = '",gsub(" ", "_", tolower(title)),".png'
date = '", Sys.time(),"'
title = '",title, "'
weight = 0
+++
", description, "
![Image alt](/",gsub(" ", "_", tolower(title)),".png '300px')
", recipe_only)
cat(md_file, file = paste0("C:\\Users\\dalji\\OneDrive\\Documents\\R\\bytebitefusion\\content\\home\\",title,".md"))
cat(md_file, file = paste0("C:\\Users\\dalji\\OneDrive\\Documents\\R\\bytebitefusion\\content\\",category,"\\",title,".md"))
}
for (i in c(sample(cuisines, size = 2))) {
generate_post("pizza",i)
}
for (i in c(sample(cuisines, size = 3))) {
generate_post("tacos",i)
}
for (i in c(sample(cuisines, size = 3))) {
generate_post("sushi",i)
}
for (i in c(sample(cuisines, size = 3))) {
generate_post("sushi",i)
}
for (i in c(sample(cuisines, size = 3))) {
generate_post("fried_chicken",i)
}
create_and_download_image <- function(prompt,path) {
response <- POST(
url = "https://api.openai.com/v1/images/generations",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "dall-e-3",
prompt=prompt,
size="1024x1024",
quality="standard",
n=1
)
)
download.file(content(response)$data[[1]]$url, destfile = path,mode = 'wb')
}
generate_post <- function(category,cuisine) {
print(cuisine)
print(category)
print("Writing Description and Recipe")
recipe <- ask_chatgpt(paste0("Give a recipe for ",category," in the style of ",cuisine))
title <- sub("\n.*", "", recipe)
title <- sub("Recipe: ", "", title)
title <- sub("Title: ", "", title)
title <- sub("Recipe for ", "", title)
recipe_only <- sub(".*Ingredients:", "Ingredients: ", recipe)
description <- ask_chatgpt(paste0("Give a detailed and stylish description to go along with the recipe for ",title))
print("Generating Image")
create_and_download_image(paste0("Create a ultra realistic photo of a plated ",title," in an appetizing style for a food blog, professional food photography, 15mm"),paste0("static/",gsub(" ", "_", tolower(title)),".png"))
print("Stitching Markdown File")
header <- paste0("+++ title: '",title,"'
author: 'Daljit Singh Johal'
date: ", Sys.Date(),"
output: html_document
+++")
md_file <- paste0("+++
showonlyimage = true
draft = false
image = '",gsub(" ", "_", tolower(title)),".png'
date = '", Sys.time(),"'
title = '",title, "'
weight = 0
+++
", description, "
![Image alt](/",gsub(" ", "_", tolower(title)),".png '300px')
", recipe_only)
cat(md_file, file = paste0("C:\\Users\\dalji\\OneDrive\\Documents\\R\\bytebitefusion\\content\\home\\",title,".md"))
cat(md_file, file = paste0("C:\\Users\\dalji\\OneDrive\\Documents\\R\\bytebitefusion\\content\\",category,"\\",title,".md"))
}
generate_post("tacos",sample(cuisines, size = 1))
# loop for multiple
for (i in c(sample(cuisines, size = 3))) {
generate_post("fried_chicken",i)
}
generate_post("pizza",sample(cuisines, size = 1))
create_and_download_image <- function(prompt,path) {
response <- POST(
url = "https://api.openai.com/v1/images/generations",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "dall-e-3",
prompt=prompt,
size="1024x1024",
quality="standard",
n=1
)
)
download.file(content(response)$data[[1]]$url, destfile = path,mode = 'wb')
}
library(httr)
library(stringr)
my_key = readLines("api_key.txt")
# api key
api_key <- my_key
# Calls the ChatGPT API with the given prompt and returns the answer
ask_chatgpt <- function(prompt) {
response <- POST(
url = "https://api.openai.com/v1/chat/completions",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "gpt-4",
messages = list(list(
role = "user",
content = prompt
))
)
)
str_trim(content(response)$choices[[1]]$message$content)
}
create_and_download_image <- function(prompt,path) {
response <- POST(
url = "https://api.openai.com/v1/images/generations",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "dall-e-3",
prompt=prompt,
size="1024x1024",
quality="standard",
n=1
)
)
download.file(content(response)$data[[1]]$url, destfile = path,mode = 'wb')
}
generate_post <- function(category,cuisine) {
print(cuisine)
print(category)
print("Writing Description and Recipe")
recipe <- ask_chatgpt(paste0("Give a recipe for ",category," in the style of ",cuisine))
title <- sub("\n.*", "", recipe)
title <- sub("Recipe: ", "", title)
title <- sub("Title: ", "", title)
title <- sub("Recipe for ", "", title)
recipe_only <- sub(".*Ingredients:", "Ingredients: ", recipe)
description <- ask_chatgpt(paste0("Give a detailed and stylish description to go along with the recipe for ",title))
print("Generating Image")
create_and_download_image(paste0("Create a ultra realistic photo of a plated ",title," in an appetizing style for a food blog, professional food photography, 15mm"),paste0("static/",gsub(" ", "_", tolower(title)),".png"))
print("Stitching Markdown File")
header <- paste0("+++ title: '",title,"'
author: 'Daljit Singh Johal'
date: ", Sys.Date(),"
output: html_document
+++")
md_file <- paste0("+++
showonlyimage = true
draft = false
image = '",gsub(" ", "_", tolower(title)),".png'
date = '", Sys.time(),"'
title = '",title, "'
weight = 0
+++
", description, "
![Image alt](/",gsub(" ", "_", tolower(title)),".png '300px')
", recipe_only)
cat(md_file, file = paste0("C:\\Users\\dalji\\OneDrive\\Documents\\R\\bytebitefusion\\content\\home\\",title,".md"))
cat(md_file, file = paste0("C:\\Users\\dalji\\OneDrive\\Documents\\R\\bytebitefusion\\content\\",category,"\\",title,".md"))
}
generate_post("pizza",sample(cuisines, size = 1))
generate_post("tacos",sample(cuisines, size = 1))
generate_post("sushi",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("pizza",sample(cuisines, size = 1))
generate_post("tacos",sample(cuisines, size = 2))
generate_post("sushi",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("tacos",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
ask_chatgpt("Write a summary for a website dedicated to using AI to create recipes and images of food dishes that are a fusion of different cultures. Highlight that a normal person would not have knowledge of so mmany regionally specific cuisines to be able to do these combinations themselves and so AI helps us go beyond the limits of our knowledge ")
generate_post("ramen",sample(cuisines, size = 1))
create_and_download_image("punjabi meat pie","static/punjabi meat pie.png")
generate_post("meat_pies","punjabi cuisine")
recipe <- ask_chatgpt(paste0("Give a recipe for burgers in the style of Panamanian cuisine"))
title <- sub("\n.*", "", recipe)
title <- sub("Recipe: ", "", title)
title <- sub("Title: ", "", title)
recipe_only <- sub(".*Ingredients:", "Ingredients: ", recipe)
description <- ask_chatgpt(paste0("Give a detailed and stylish description to go along with the recipe for ",title))
create_and_download_image(paste0("Create a ultra realistic photo of a plated ",title,"which is made with the follwing recipe",recipe_only," in an appetizing style for a food blog, professional food photography, 15mm"),paste0("static/",title,".png"))
description
recipe_only
categories = c("burgers","fried_chicken","meat_pies","tacos","pizza","ramen","tacos")
sample(categories, size = 1)
?sample
ask_chatgpt("give me a tagline for a website about  how combining ideas and ingredients from different cultures is one of the great joys of cooking in an increasingly globalised world")
ask_chatgpt("write a short paragraph about how combining ideas and ingredients from different cultures is one of the great joys of cooking in an increasingly globalised world
")
library(httr)
library(stringr)
my_key = readLines("api_key.txt")
# api key
api_key <- my_key
# Calls the ChatGPT API with the given prompt and returns the answer
ask_chatgpt <- function(prompt) {
response <- POST(
url = "https://api.openai.com/v1/chat/completions",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "gpt-4",
messages = list(list(
role = "user",
content = prompt
))
)
)
str_trim(content(response)$choices[[1]]$message$content)
}
create_and_download_image <- function(prompt,path) {
response <- POST(
url = "https://api.openai.com/v1/images/generations",
add_headers(Authorization = paste("Bearer", api_key)),
content_type_json(),
encode = "json",
body = list(
model = "dall-e-3",
prompt=prompt,
size="1024x1024",
quality="standard",
n=1
)
)
download.file(content(response)$data[[1]]$url, destfile = path,mode = 'wb')
}
cuisines <- read.csv("list_of_cuisines.csv", header=FALSE, stringsAsFactors=FALSE, fileEncoding="latin1")
cuisines <- cuisines[which(!grepl("Cuisine of ",cuisines$V1)),]
generate_post <- function(category,cuisine) {
print(cuisine)
print(category)
print("Writing Description and Recipe")
recipe <- ask_chatgpt(paste0("Give a recipe for ",category," in the style of ",cuisine))
title <- sub("\n.*", "", recipe)
title <- sub("Recipe: ", "", title)
title <- sub("Title: ", "", title)
title <- sub("Recipe for ", "", title)
recipe_only <- sub(".*Ingredients:", "Ingredients: ", recipe)
description <- ask_chatgpt(paste0("Give a detailed and stylish description to go along with the recipe for ",title,"which is made with the follwing recipe",recipe_only))
print("Generating Image")
create_and_download_image(paste0("Create a ultra realistic photo of a plated ",title,"which is made with the follwing recipe",recipe_only," in an appetizing style for a food blog, professional food photography, 15mm"),paste0("static/",gsub(" ", "_", tolower(title)),".png"))
print("Stitching Markdown File")
header <- paste0("+++ title: '",title,"'
author: 'Daljit Singh Johal'
date: ", Sys.Date(),"
output: html_document
+++")
md_file <- paste0("+++
showonlyimage = true
draft = false
image = '",gsub(" ", "_", tolower(title)),".png'
date = '", Sys.time(),"'
title = '",title, "'
weight = 0
+++
", description, "
![Image alt](/",gsub(" ", "_", tolower(title)),".png '300px')
", recipe_only)
cat(md_file, file = paste0("C:\\Users\\dalji\\OneDrive\\Documents\\R\\bytebitefusion\\content\\home\\",title,".md"))
cat(md_file, file = paste0("C:\\Users\\dalji\\OneDrive\\Documents\\R\\bytebitefusion\\content\\",category,"\\",title,".md"))
}
categories = c("burgers","fried_chicken","meat_pies","tacos","pizza","ramen","tacos")
for (i in c(sample(cuisines, size = 10))) {
generate_post(sample(categories, size = 1),i)
}
generate_post("meat_pies",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("pizza",sample(cuisines, size = 1))
generate_post("pizza",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
generate_post("fried_chicken",sample(cuisines, size = 1))
